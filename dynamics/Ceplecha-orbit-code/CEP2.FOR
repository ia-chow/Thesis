C    name of this file is: MORB.FOR
C    code MORB.FOR: you do not need the next explanations written
C                   in Czech language. They reffer to changes according
C                   to previous versions of the program inputs.
C     PROGRAM MORBAR - VYSLEDNE HODNOTY JAK PRO EKVINOKCIUM B1950.0
C                    TAK PRO J2000.0. VSECHNY PRECESNI KONSTANTY
C                    SE POCITAJI AUTOMATICKY (KROME BESSELOVYCH A,B,C,D)
C                    DALE AUTOMATICKY VYPOCET DELKY SLUNCE, PRECESE V
C                    DELCE ZE STREDNIHO EKVINOKCIA DANEHO ROKU NA DANE
C                    DATUM A RADIUS VEKTOR. AUTOMATICKY VYPOCET
C                    GREENWICH APPARENT SIDERAL TIME (VZDY).
C                    TATO VERZE DOVOLUJE POUZIVAT VSECHNY PREDESLE
C                    TYPY FORMATU VSTUPNICH DAT (JEDNU I DVE RADKY
C                    PRO POLOHU PRUMERNEHO BODU A PLNOU DELKU VSTUPNICH
C                    DAT CO SE TYCE PRECESNICH KONSTANT, DELEK SLUNCE,
C                    APOD.). NOVA VERZE VSTUPNICH DAT VYZADUJE VE
C                    STEJNEM FORMATU PRVNI TRI RADKY, NASLEDUJE RADEK
C                    BESSELOVYCH DENNICH CISEL VE FOMATU 4F10.0 A PAK
C                    UZ JEN POSLEDNI DVA RADKY TYKAJICI SE RADIANTU A
C                    RYCHLOSTI OPET VE STEJNEM FORMATU.
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION RD(13),AR(14),EL(26),EL1(26),EL2(26),DEDA(26),DEDD(26),
     /DEDV(26),EEL(26),DEDVA(26),EL50(26)
      OPEN(5,FILE='MORBIN.DAT',STATUS='OLD')
      OPEN(6,FILE='MORBOUT.DAT')
      OPEN(7,FILE='M.DAT')
      SH=1.0027379093D0
      PI=3.14159265358979D0
      PS=PI/180.D0
      PH=PI/12.D0
      PV=PI/648000.D0
    1 READ(5,10)IYR,MO,IDAY,TH,TM,TS,THH,THM,THS
   10 FORMAT(3I5,6F5.0)
      IF(IYR.EQ.0) GO TO 100
      BA=0.D0
      BB=0.D0
      BC=0.D0
      BD=0.D0
      III=0
      T=(TH+TM/60.D0+TS/3600.D0)*PH
      CALL GAST(IYR,MO,IDAY,THH,THM,THS)
      THO=(THH+THM/60.D0+THS/3600.D0)*PH
      READ(5,3)DETUT,EPSTH,EPSTM,EPSTS
    3 FORMAT(F5.0,10X,3F5.0)
      ET=T+DETUT*PI/43200.D0
      CALL KVADR(ET)
      ET1=ET/(2.D0*PI)
      EPST=(EPSTH+EPSTM/60.D0+EPSTS/3600.D0)*PH
      READ(5,11)GL,GLM,GLS,FI,FIM,FIS,HT
   11 FORMAT(5X,7F5.0)
      GLOLD=GL
      GL=(GL+GLM/60.D0+GLS/3600.D0)*PS
      FI=(FI+FIM/60.D0+FIS/3600.D0)*PS
      THE=T*SH+THO+GL
      CALL KVADR(THE)
      GLSTN=GL
      THESTN=THE
      FISTN=FI
      HTST=HT
      READ(5,11)GL22,GLM22,GLS22,FI22,FIM22,FIS22,HT22
      IF(GL22.NE.GLOLD)BACKSPACE 5
      READ(5,2,ERR=6)DT,ECL,SM,SN,CM,CN,BA,BB,BC,BD
    2 FORMAT(F5.0,F10.6,8F8.3)
      WRITE(7,2)DT,ECL,SM,SN,CM,CN,BA,BB,BC,BD
      IF((((BC.EQ.0.D0).AND.(BD.EQ.0.D0)).AND.(BB.EQ.0.D0)).AND.(BA.EQ.
     \0.D0))GO TO 6
      GO TO 5
    6 BACKSPACE 5
      III=1
      READ(5,7)BA,BB,BC,BD
      WRITE(7,14)BA,BB,BC,BD
    7 FORMAT(4F10.0)
   14 FORMAT(4F10.4)
    5 YR=DBLE(IYR)
      CALL PK2000(YR,DT,ECL,CM,CN,SM,SN,PPP,SA,SB,SC,SCC)
      IF(III.EQ.1)GO TO 13
      READ(5,4)SSSSA,SSSSB,SSSSCC
    4 FORMAT(3F10.5)
   13 WRITE(7,17)YR,DT,ECL,CM,CN,SM,SN,PPP
      WRITE(7,17)SA,SB,SC,SCC,BA,BB,BC,BD
   17 FORMAT(8F10.5)
      ECL=ECL*PS
      SM=SM*PV
      SN=SN*PV
      CM=CM*PV
      CN=CN*PV
      BA=BA*PV
      BB=BB*PV
      BC=BC*PV
      BD=BD*PV
      SA=SA*PS
      SB=SB*PS
      SCC=SCC*PS
      CALL SLR(III,IYR,MO,IDAY,PPP,ET1,SL,DSLDT,R,DRDT)
      EPSSL=DSLDT*EPST/(2.D0*PI)
      READ(5,9)NOMET,ALFR,DELR,VINF,VAVR
    9 FORMAT(I10,3F10.5,10X,F10.5)
      ALFR=ALFR*PS
      DELR=DELR*PS
      READ(5,8)EPA,EPD,EPV,EPVA
    8 FORMAT(10X,3F10.5,10X,F10.5)
      EPA=EPA*PS
      EPD=EPD*PS
      RD(1)=DT
      RD(2)=CM
      RD(3)=CN
      RD(4)=SM
      RD(5)=SN
      RD(6)=ECL
      RD(7)=BA
      RD(8)=BB
      RD(9)=BC
      RD(10)=BD
      RD(11)=SA
      RD(12)=SB
      RD(13)=SCC
      AR(1)=FI
      AR(2)=ALFR
      AR(3)=DELR
      AR(4)=THE
      AR(5)=VINF
      AR(6)=R
      AR(7)=DRDT
      AR(8)=HT
      AR(9)=SL
      AR(10)=DSLDT
      AR(11)=VAVR
      AR(12)=FISTN
      AR(13)=HTST
      AR(14)=THESTN
      CALL ORBIT(RD,AR,EL)
      AR(2)=ALFR+0.001D0
      CALL ORBIT(RD,AR,EL1)
      AR(2)=ALFR-0.001D0
      CALL ORBIT(RD,AR,EL2)
      DO 21 I=1,26
   21 DEDA(I)=(EL1(I)-EL2(I))/0.002D0
      AR(2)=ALFR
      AR(3)=DELR+0.001D0
      CALL ORBIT(RD,AR,EL1)
      AR(3)=DELR-0.001D0
      CALL ORBIT(RD,AR,EL2)
      DO 22 I=1,26
   22 DEDD(I)=(EL1(I)-EL2(I))/0.002D0
      AR(3)=DELR
      AR(5)=VINF+0.01D0
      CALL ORBIT(RD,AR,EL1)
      AR(5)=VINF-0.01D0
      CALL ORBIT(RD,AR,EL2)
      AR(5)=VINF
      DO 23 I=1,26
   23 DEDV(I)=(EL1(I)-EL2(I))/0.02D0
      AR(11)=VAVR+0.01D0
      CALL ORBIT(RD,AR,EL1)
      AR(11)=VAVR-0.01D0
      CALL ORBIT(RD,AR,EL2)
      AR(11)=VAVR
      DO 12 I=1,26
   12 DEDVA(I)=(EL1(I)-EL2(I))/0.02D0
      DO 24 I=1,26
   24 EEL(I)=DSQRT(EPA**2*DEDA(I)**2+EPD**2*DEDD(I)**2+
     /EPV**2*DEDV(I)**2+EPVA**2*DEDVA(I)**2)
      EEL(13)=DSQRT(EEL(13)**2+EPSSL**2)
      ALFF=ALFR
      DELL=DELR
      CALL PLACEM(ALFF,DELL,SM,SN,ECL,BA,BB,BC,BD)
      CALL PLM00(ALFF,DELL,CM,CN)
      ALFR00=ALFF/PS
      DELR00=DELL/PS
      CALL PLM50(ALFF,DELL)
      ALFR50=ALFF/PS
      DELR50=DELL/PS
      ALFR=ALFR/PS
      DELR=DELR/PS
      EL(26)=EL(26)/PS
      EEL(26)=EEL(26)/PS
      EL(1)=EL(1)/PS
      EL(2)=EL(2)/PS
      EL(5)=EL(5)/PS
      EL(6)=EL(6)/PS
      DO 25 I=12,16
      EL(I)=EL(I)/PS
   25 EEL(I)=EEL(I)/PS
      DO 26 I=18,24
      EL(I)=EL(I)/PS
   26 EEL(I)=EEL(I)/PS
      EALFR=EPA/PS
      EDELR=EPD/PS
      EEL(1)=EEL(1)/PS
      EEL(2)=EEL(2)/PS
      EEL(5)=EEL(5)/PS
      EEL(6)=EEL(6)/PS
      WRITE(6,27)NOMET,IYR,MO,IDAY
   27 FORMAT(31H    NO MET    YEAR   MONTH  DAY/I10,I8,I7,I6//)
      WRITE(6,28)ALFR,DELR,EL(18),EL(19),EALFR,EDELR,EEL(18),EEL(19),
     /(EL(I),I=20,24),EL(26),(EEL(I),I=20,24),EEL(26)
   28 FORMAT(10X,11H APPARENT ://
     /40H    ALFA R   DELTA R    ALFA G   DELTA G/4F10.4/4F10.4//
     /60H    LAMBDA     BETA      L         B       G ELONG   H ELONG/
     /6F10.4/6F10.4//10X,10H J2000.0 :/)
      WRITE(6,29)ALFR00,DELR00,VINF,(EL(I),I=1,4),EALFR,EDELR,EPV,
     /(EEL(I),I=1,4),EL(5),EL(6),EL(7),EL(25),EL(15),EL(16),EL(17),
     /(EEL(I),I=5,7),EEL(25),(EEL(I),I=15,17),(EL(I),I=8,14),
     /(EEL(I),I=8,14)
   29 FORMAT(50H    ALFA R   DELTA R     V INF    ALFA G   DELTA G,
     /18H     V G       V H/7F10.4/7F10.4//
     /60H     L         B       V EARTH    1/A        PI    TRUE ANOM,
     /14H  TIME FROM PI/3F10.4,F10.6,2F10.4,F10.2/3F10.4,F10.6,2F10.4,
     /F10.2//49H     A         E        Q PER     Q APH     OMEGA,
     /20H   ASC NODE     INCL/7F10.4/7F10.4///)
      CALL ORB50(YR,RD,AR,EL50)
      EL50(26)=EL50(26)/PS
      EL50(1)=EL50(1)/PS
      EL50(2)=EL50(2)/PS
      EL50(5)=EL50(5)/PS
      EL50(6)=EL50(6)/PS
      DO 15 I=12,16
   15 EL50(I)=EL50(I)/PS
      DO 16 I=18,24
   16 EL50(I)=EL50(I)/PS
      WRITE(6,30)
   30 FORMAT(//10X,10H B1950.0 :/)
      WRITE(6,29)ALFR50,DELR50,VINF,(EL50(I),I=1,4),EALFR,EDELR,EPV,
     /(EEL(I),I=1,4),EL50(5),EL50(6),EL50(7),EL50(25),EL50(15),EL50(16),
     /EL50(17),
     /(EEL(I),I=5,7),EEL(25),(EEL(I),I=15,17),(EL50(I),I=8,14),
     /(EEL(I),I=8,14)
      GO TO 1
  100 CLOSE(5)
      CLOSE(6)
      CLOSE(7)
      STOP
      END
C         ORBIT
      SUBROUTINE ORBIT(R00,AR,EL)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION R00(13),AR(14),EL(26)
      DTIME=0.D0
      GK=0.01720209895D0
      GK2=GK**2
      AUKM=1731.456829D0
      PI=3.14159265358979D0
      PIPUL=PI/2.D0
      PI2=2.D0*PI
      DT=R00(1)
      CM=R00(2)
      CN=R00(3)
      SM=R00(4)
      SN=R00(5)
      ECL=R00(6)
      BA=R00(7)
      BB=R00(8)
      BC=R00(9)
      BD=R00(10)
      FI=AR(1)
      ALFR=AR(2)
      DELR=AR(3)
      THE=AR(4)
      VINF=AR(5)
      R=AR(6)
      DRDT=AR(7)
      HT=AR(8)
      SLON=AR(9)
      DSLDT=AR(10)
      VAVR=AR(11)
      FISTN=AR(12)
      HTST=AR(13)
      ALF=AR(14)+PIPUL
      CALL KVADR(ALF)
      SECL=DSIN(ECL)
      CECL=DCOS(ECL)
      SFISTN=DSIN(FISTN)
      CFISTN=DCOS(FISTN)
      CALL FIFIC(FISTN,FIDT,RGCSTN)
      FIDT=FIDT+HTST*(FISTN-FIDT)/(RGCSTN+HTST)
      FAU=PI2*(RGCSTN+HTST)*DCOS(FIDT)/86164.09D0
      XD=VAVR*DCOS(ALFR)*DCOS(DELR)-FAU*DCOS(ALF)
      YD=VAVR*DSIN(ALFR)*DCOS(DELR)-FAU*DSIN(ALF)
      ZD=VAVR*DSIN(DELR)
      CALL XYZAD(XD,YD,ZD,ARD,DELRD,VD)
      VD=VD+VINF-VAVR
      CALL FIFIC(FI,FIDOT,RGC)
      FIDOT=FIDOT+HT*(FI-FIDOT)/(RGC+HT)
      SFI=DSIN(FIDOT)
      CFI=DCOS(FIDOT)
   10 SDELRD=DSIN(DELRD)
      CDELRD=DCOS(DELRD)
   11 VDD=DSQRT(VD**2-797201.0D0/(HT+RGC))
      TRD=THE-ARD
      CALL KVADR(TRD)
      STRD=DSIN(TRD)
      CTRD=DCOS(TRD)
      CZRD=SDELRD*SFI+CDELRD*CFI*CTRD
      SZRD=DSQRT(1.D0-CZRD**2)
      sfifi=dsin(fi-fidot)
C     write(6,222)czrd,sfifi
C 222 format(/5x,f10.7,5x,f10.7)
      IF(CZRD.LT.sfifi) GO TO 31
      ICZ=0
      GO TO 32
   31 ICZ=-1
      CZRD=-CZRD
      STRD=-STRD
      CTRD=-CTRD
      SDELRD=-SDELRD
      GO TO 32
   32 ZRD=DATAN(SZRD/CZRD)
      TDZR2=(VD-VDD)*DSIN(ZRD/2.D0)/((VD+VDD)*DCOS(ZRD/2.D0))
      DZR=2.D0*DATAN(TDZR2)
      ZRDD=ZRD+DZR
      SAZRD=CDELRD*STRD/SZRD
      CAZRD=(-SDELRD*CFI+CDELRD*SFI*CTRD)/SZRD
      SZRDD=DSIN(ZRDD)
      CZRDD=DCOS(ZRDD)
      SDELDD=CZRDD*SFI-SZRDD*CFI*CAZRD
      CDELDD=DSQRT(1.D0-SDELDD**2)
      DELRDD=DATAN(SDELDD/CDELDD)
      STRDD=SZRDD*SAZRD/CDELDD
      CTRDD=(CZRDD*CFI+SZRDD*SFI*CAZRD)/CDELDD
      TRDD=DATAN2(STRDD,CTRDD)
      CALL KVADR(TRDD)
      ALFRDD=THE-TRDD
      CALL KVADR(ALFRDD)
      IF(ICZ.EQ.0) GO TO  33
      ALFRDD=ALFRDD+PI
      CALL KVADR(ALFRDD)
      DELRDD=-DELRDD
   33 EL(18)=ALFRDD
      EL(19)=DELRDD
      CALL PLACEM(ALFRDD,DELRDD,SM,SN,ECL,BA,BB,BC,BD)
      CALRDD=DCOS(ALFRDD)
      SALRDD=DSIN(ALFRDD)
      CDELDD=DCOS(DELRDD)
      SDELDD=DSIN(DELRDD)
      CALL PLM00(ALFRDD,DELRDD,CM,CN)
      EL(1)=ALFRDD
      EL(2)=DELRDD
      EL(3)=VDD
      SBET=-CDELDD*SALRDD*SECL+SDELDD*CECL
      CBET=DSQRT(1.D0-SBET**2)
      CLAM=CDELDD*CALRDD/CBET
      SLAM=(CDELDD*SALRDD*CECL+SDELDD*SECL)/CBET
      EL(21)=DATAN(SBET/CBET)
      EL(20)=DATAN2(SLAM,CLAM)
      CALL KVADR(EL(20))
      APEX=SLON-PIPUL-DRDT/(R*DSLDT)
      CELG=DCOS(APEX-EL(20))*CBET
      SELG=DSQRT(1.D0-CELG**2)
      ELG=DATAN2(SELG,CELG)
      SAP=DSIN(APEX)
      CAP=DCOS(APEX)
      VG=VDD/AUKM
      VZ=DSQRT(DRDT**2+(R*DSLDT)**2)
      VZKM=VZ*AUKM
      EL(7)=VZKM
      VHX=-VG*CLAM*CBET+VZ*CAP
      VHY=-VG*SLAM*CBET+VZ*SAP
      VHZ=-VG*SBET
      XR=-VHX
      YR=-VHY
      ZR=-VHZ
      CALL XYZAD(XR,YR,ZR,HL,HB,VH)
      VHKM=VH*AUKM
      EL(4)=VHKM
      EL(22)=HL
      EL(23)=HB
      CELGH=DCOS(HB)*DCOS(APEX-HL)
      SELGH=DSQRT(1.D0-CELGH**2)
      ELGH=DATAN2(SELGH,CELGH)
      X=-R*DCOS(SLON)
      Y=-R*DSIN(SLON)
      CI=(X*VHY-Y*VHX)/GK
      SISU=Y*VHZ/GK
      SICU=X*VHZ/GK
      IF(HB.GT.0.D0) U=SLON
      IF(HB.LT.0.D0) U=SLON-PI
      CALL KVADR(U)
      IF(DABS(SISU).GT.DABS(SICU))DI=DATAN2(SISU/DSIN(U),CI)
      IF(DABS(SISU).LE.DABS(SICU))DI=DATAN2(SICU/DCOS(U),CI)
      PAR=CI**2+SISU**2+SICU**2
      SAX=GK2*R/(2.D0*GK2-R*VH**2)
      EL(8)=SAX
      ECV=PAR/R-1.D0
      ESV=DSQRT(PAR)*(X*VHX+Y*VHY)/(GK*R)
      VAN=DATAN2(ESV,ECV)
      CALL KVADR(VAN)
      EX=DSQRT(ECV**2+ESV**2)
      IF(HB.GT.0.D0)ARGP=PI-VAN
      IF(HB.LT.0.D0)ARGP=-VAN
      CALL KVADR(ARGP)
      IF((EX-1.D0).GE.0.D0) GO TO 53
      EAN=2.D0*DATAN(DSIN(VAN/2.D0)*DSQRT((1.D0-EX)/(1.D0+EX))/
     /DCOS(VAN/2.D0))
      CALL KVADR(EAN)
      ANM=EAN-EX*DSIN(EAN)
      SMI=GK/DSQRT(SAX**3)
      DTIME=ANM/SMI
   53 QPER=SAX*(1.D0-EX)
      QAPH=SAX*(1.D0+EX)
      CALL ELEM00(R00(11),R00(12),R00(13),HL,HB,U,DI,ARGP,EL(5),EL(6),
     /EL(13),EL(14),EL(12))
      EL(9)=EX
      EL(10)=QPER
      EL(11)=QAPH
      EL(15)=EL(12)+EL(13)
      CALL KVADR(EL(15))
      EL(16)=VAN
      EL(17)=DTIME
      EL(24)=ELG
      EL(25)=1.D0/SAX
      EL(26)=ELGH
      RETURN
      END
C         ORB50 (EQUINOX B1950.0)
      SUBROUTINE ORB50(YEAR,R00,AR,EL)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION R00(13),AR(14),EL(26)
      DTIME=0.D0
      GK=0.01720209895D0
      GK2=GK**2
      AUKM=1731.456829D0
      PI=3.14159265358979D0
      PIPUL=PI/2.D0
      PI2=2.D0*PI
      DT=R00(1)
      CM=R00(2)
      CN=R00(3)
      SM=R00(4)
      SN=R00(5)
      ECL=R00(6)
      BA=R00(7)
      BB=R00(8)
      BC=R00(9)
      BD=R00(10)
      FI=AR(1)
      ALFR=AR(2)
      DELR=AR(3)
      THE=AR(4)
      VINF=AR(5)
      R=AR(6)
      DRDT=AR(7)
      HT=AR(8)
      SLON=AR(9)
      DSLDT=AR(10)
      VAVR=AR(11)
      FISTN=AR(12)
      HTST=AR(13)
      ALF=AR(14)+PIPUL
      CALL KVADR(ALF)
      SECL=DSIN(ECL)
      CECL=DCOS(ECL)
      SFISTN=DSIN(FISTN)
      CFISTN=DCOS(FISTN)
      CALL FIFIC(FISTN,FIDT,RGCSTN)
      FIDT=FIDT+HTST*(FISTN-FIDT)/(RGCSTN+HTST)
      FAU=PI2*(RGCSTN+HTST)*DCOS(FIDT)/86164.09D0
      XD=VAVR*DCOS(ALFR)*DCOS(DELR)-FAU*DCOS(ALF)
      YD=VAVR*DSIN(ALFR)*DCOS(DELR)-FAU*DSIN(ALF)
      ZD=VAVR*DSIN(DELR)
      CALL XYZAD(XD,YD,ZD,ARD,DELRD,VD)
      VD=VD+VINF-VAVR
      CALL FIFIC(FI,FIDOT,RGC)
      FIDOT=FIDOT+HT*(FI-FIDOT)/(RGC+HT)
      SFI=DSIN(FIDOT)
      CFI=DCOS(FIDOT)
   10 SDELRD=DSIN(DELRD)
      CDELRD=DCOS(DELRD)
   11 VDD=DSQRT(VD**2-797201.0D0/(HT+RGC))
      TRD=THE-ARD
      CALL KVADR(TRD)
      STRD=DSIN(TRD)
      CTRD=DCOS(TRD)
      CZRD=SDELRD*SFI+CDELRD*CFI*CTRD
      SZRD=DSQRT(1.D0-CZRD**2)
      sfifi=dsin(fi-fidot)
      IF(CZRD.LT.sfifi) GO TO 31
      ICZ=0
      GO TO 32
   31 ICZ=-1
      CZRD=-CZRD
      STRD=-STRD
      CTRD=-CTRD
      SDELRD=-SDELRD
   32 ZRD=DATAN(SZRD/CZRD)
      TDZR2=(VD-VDD)*DSIN(ZRD/2.D0)/((VD+VDD)*DCOS(ZRD/2.D0))
      DZR=2.D0*DATAN(TDZR2)
      ZRDD=ZRD+DZR
      SAZRD=CDELRD*STRD/SZRD
      CAZRD=(-SDELRD*CFI+CDELRD*SFI*CTRD)/SZRD
      SZRDD=DSIN(ZRDD)
      CZRDD=DCOS(ZRDD)
      SDELDD=CZRDD*SFI-SZRDD*CFI*CAZRD
      CDELDD=DSQRT(1.D0-SDELDD**2)
      DELRDD=DATAN(SDELDD/CDELDD)
      STRDD=SZRDD*SAZRD/CDELDD
      CTRDD=(CZRDD*CFI+SZRDD*SFI*CAZRD)/CDELDD
      TRDD=DATAN2(STRDD,CTRDD)
      CALL KVADR(TRDD)
      ALFRDD=THE-TRDD
      CALL KVADR(ALFRDD)
      IF(ICZ.EQ.0) GO TO  33
      ALFRDD=ALFRDD+PI
      CALL KVADR(ALFRDD)
      DELRDD=-DELRDD
   33 EL(18)=ALFRDD
      EL(19)=DELRDD
      CALL PLACEM(ALFRDD,DELRDD,SM,SN,ECL,BA,BB,BC,BD)
      CALRDD=DCOS(ALFRDD)
      SALRDD=DSIN(ALFRDD)
      CDELDD=DCOS(DELRDD)
      SDELDD=DSIN(DELRDD)
      CALL PLM00(ALFRDD,DELRDD,CM,CN)
      CALL PLM50(ALFRDD,DELRDD)
      EL(1)=ALFRDD
      EL(2)=DELRDD
      EL(3)=VDD
      SBET=-CDELDD*SALRDD*SECL+SDELDD*CECL
      CBET=DSQRT(1.D0-SBET**2)
      CLAM=CDELDD*CALRDD/CBET
      SLAM=(CDELDD*SALRDD*CECL+SDELDD*SECL)/CBET
      EL(21)=DATAN(SBET/CBET)
      EL(20)=DATAN2(SLAM,CLAM)
      CALL KVADR(EL(20))
      APEX=SLON-PIPUL-DRDT/(R*DSLDT)
      CELG=DCOS(APEX-EL(20))*CBET
      SELG=DSQRT(1.D0-CELG**2)
      ELG=DATAN2(SELG,CELG)
      SAP=DSIN(APEX)
      CAP=DCOS(APEX)
      VG=VDD/AUKM
      VZ=DSQRT(DRDT**2+(R*DSLDT)**2)
      VZKM=VZ*AUKM
      EL(7)=VZKM
      VHX=-VG*CLAM*CBET+VZ*CAP
      VHY=-VG*SLAM*CBET+VZ*SAP
      VHZ=-VG*SBET
      XR=-VHX
      YR=-VHY
      ZR=-VHZ
      CALL XYZAD(XR,YR,ZR,HL,HB,VH)
      VHKM=VH*AUKM
      EL(4)=VHKM
      EL(22)=HL
      EL(23)=HB
      CELGH=DCOS(HB)*DCOS(APEX-HL)
      SELGH=DSQRT(1.D0-CELGH**2)
      ELGH=DATAN2(SELGH,CELGH)
      X=-R*DCOS(SLON)
      Y=-R*DSIN(SLON)
      CI=(X*VHY-Y*VHX)/GK
      SISU=Y*VHZ/GK
      SICU=X*VHZ/GK
      IF(HB.GT.0.D0) U=SLON
      IF(HB.LT.0.D0) U=SLON-PI
      CALL KVADR(U)
      IF(DABS(SISU).GT.DABS(SICU))DI=DATAN2(SISU/DSIN(U),CI)
      IF(DABS(SISU).LE.DABS(SICU))DI=DATAN2(SICU/DCOS(U),CI)
      PAR=CI**2+SISU**2+SICU**2
      SAX=GK2*R/(2.D0*GK2-R*VH**2)
      EL(8)=SAX
      ECV=PAR/R-1.D0
      ESV=DSQRT(PAR)*(X*VHX+Y*VHY)/(GK*R)
      VAN=DATAN2(ESV,ECV)
      CALL KVADR(VAN)
      EX=DSQRT(ECV**2+ESV**2)
      IF(HB.GT.0.D0)ARGP=PI-VAN
      IF(HB.LT.0.D0)ARGP=-VAN
      CALL KVADR(ARGP)
      IF((EX-1.D0).GE.0.D0) GO TO 53
      EAN=2.D0*DATAN(DSIN(VAN/2.D0)*DSQRT((1.D0-EX)/(1.D0+EX))/
     /DCOS(VAN/2.D0))
      CALL KVADR(EAN)
      ANM=EAN-EX*DSIN(EAN)
      SMI=GK/DSQRT(SAX**3)
      DTIME=ANM/SMI
   53 QPER=SAX*(1.D0-EX)
      QAPH=SAX*(1.D0+EX)
      CALL ELEM50(YEAR,HL,HB,U,DI,ARGP,EL(5),EL(6),
     /EL(13),EL(14),EL(12))
      EL(9)=EX
      EL(10)=QPER
      EL(11)=QAPH
      EL(15)=EL(12)+EL(13)
      CALL KVADR(EL(15))
      EL(16)=VAN
      EL(17)=DTIME
      EL(24)=ELG
      EL(25)=1.D0/SAX
      EL(26)=ELGH
      RETURN
      END
C         XYZAD
      SUBROUTINE XYZAD(X,Y,Z,A,D,DL)
      IMPLICIT REAL*8 (A-H,O-Z)
      PI=3.14159265358979D0
      DL=DSQRT(X**2+Y**2+Z**2)
      EPS=DL*1.E-15
      IF((DABS(X).LT.EPS).AND.(DABS(Y).LT.EPS)) GO TO 2
      IF((DABS(X).LT.EPS).AND.(Y.GT.0.D0)) GO TO 3
      IF((DABS(X).LT.EPS).AND.(Y.LT.0.D0)) GO TO 4
      IF((DABS(Y).LT.EPS).AND.(X.GT.0.D0)) GO TO 5
      IF((DABS(Y).LT.EPS).AND.(X.LT.0.D0)) GO TO 6
      A=DATAN2(Y,X)
      CALL KVADR(A)
   10 IF(DABS(X).GT.DABS(Y)) D=DATAN(Z*DCOS(A)/X)
      IF(DABS(X).LE.DABS(Y)) D=DATAN(Z*DSIN(A)/Y)
      GO TO 30
    2 D=PI/2.D0
      A=0.D0
      GO TO 30
    3 A=PI/2.D0
      GO TO 10
    4 A=3.D0*PI/2.D0
      GO TO 10
    5 A=0.D0
      GO TO 10
    6 A=2.D0*PI
      GO TO 10
   30 RETURN
      END
C         PLM50
      SUBROUTINE PLM50(AL,D)
      IMPLICIT REAL*8(A-H,O-Z)
      PI=3.14159265358979D0
      PV=PI/648000.D0
      T=-0.5D0
      AM1=1.2812323D0
      AM2=0.0003879D0
      AM3=0.0000101D0
      AN1=0.5567530D0
      AN2=-0.0001185D0
      AN3=-0.0000116D0
      CM=(AM1*T+AM2*T**2+AM3*T**3)*3600.D0
      CN=(AN1*T+AN2*T**2+AN3*T**3)*3600.D0
      CM=CM*PV
      CN=CN*PV
      ALB=AL
      DB=D
    2 ALM=(AL+ALB)/2.D0
      DM=(D+DB)/2.D0
      ALOLD=AL
      DOLD=D
      AL=ALB+CM+CN*DSIN(ALM)*DTAN(DM)
      D=DB+CN*DCOS(ALM)
      IF((DABS((ALOLD-AL)/AL).GT.1.D-10).OR.
     /(DABS((DOLD-D)/D).GT.1.D-10)) GO TO 2
      CALL KVADR(AL)
      RETURN
      END
C         PLM00
      SUBROUTINE PLM00(AL,D,CM,CN)
      IMPLICIT REAL*8(A-H,O-Z)
      ALB=AL
      DB=D
    2 ALM=(AL+ALB)/2.D0
      DM=(D+DB)/2.D0
      ALOLD=AL
      DOLD=D
      AL=ALB-CM-CN*DSIN(ALM)*DTAN(DM)
      D=DB-CN*DCOS(ALM)
      IF((DABS((ALOLD-AL)/AL).GT.1.D-10).OR.
     /(DABS((DOLD-D)/D).GT.1.D-10)) GO TO 2
      CALL KVADR(AL)
      RETURN
      END
C         PLACEM
      SUBROUTINE PLACEM(AL,D,SM,SN,ECL,BA,BB,BC,BD)
      IMPLICIT REAL*8(A-H,O-Z)
      SA=SM/SN+DSIN(AL)*DTAN(D)
      SB=DCOS(AL)*DTAN(D)
      SC=DCOS(AL)/DCOS(D)
      SD=DSIN(AL)/DCOS(D)
      SAD=DCOS(AL)
      SBD=-DSIN(AL)
      SCD=DTAN(ECL)*DCOS(D)-DSIN(AL)*DSIN(D)
      SDD=DCOS(AL)*DSIN(D)
      AL=AL-BA*SA-BB*SB-BC*SC-BD*SD
      D=D-BA*SAD-BB*SBD-BC*SCD-BD*SDD
      CALL KVADR(AL)
      RETURN
      END
C         GRMISE
      SUBROUTINE GRMISE(A,AG,AM,AS)
      IMPLICIT REAL*8 (A-H,O-Z)
      IAG=IDINT(A)
      AG=DFLOAT(IAG)
      AMM=(A-AG)*60.D0
      IAM=IDINT(AMM)
      AM=DFLOAT(IAM)
      AS=(AMM-AM)*60.D0
      IF(DABS(AS).LT.59.5D0) GO TO 2
      IF(AS.GT.0.D0) GO TO 3
      AS=0.D0
      AM=AM-1.D0
      IF(AM.GT.(-59.5D0)) GO TO 2
      AM=0.D0
      AG=AG-1.D0
      GO TO 2
    3 AS=0.D0
      AM=AM+1.D0
      IF(AM.LT.59.5D0) GO TO 2
      AM=0.D0
      AG=AG+1.D0
    2 RETURN
      END
C         KVADR
      SUBROUTINE KVADR(ANG)
      IMPLICIT REAL*8 (A-H,O-Z)
    1 PI=3.14159265358979D0
      PI2=2.D0*PI
    4 IF(ANG.LT.0.D0) GO TO 2
    5 IF(ANG.GE.PI2) GO TO 3
      GO TO 6
    3 ANG=ANG-PI2
      GO TO 5
    2 ANG=ANG+PI2
      GO TO 4
    6 RETURN
      END
C         ELEM00  -  ELEMENTY PRO J2000.0
      SUBROUTINE ELEM00(A,B,CC,ALAM,BET,ANODE,AI,OMG,ALAM0,BET0,ANODE0,
     /AI0,OMG0)
      IMPLICIT REAL*8(A-H,O-Z)
      ALAM0=ALAM-A+B*DCOS(ALAM+CC)*DSIN(BET)/DCOS(BET)
      BET0=BET-B*DSIN(ALAM+CC)
      ANODE0=ANODE-A+B*DSIN(ANODE+CC)*DCOS(AI)/DSIN(AI)
      AI0=AI-B*DCOS(ANODE+CC)
      OMG0=OMG-B*DSIN(ANODE+CC)/DSIN(AI)
      RETURN
      END
C         ELEM50  -  ELEMENTY PRO B1950.0
      SUBROUTINE ELEM50(YR,ALAM,BET,ANODE,AI,OMG,ALAM0,BET0,ANODE0,
     /AI0,OMG0)
      IMPLICIT REAL*8(A-H,O-Z)
      PI=3.14159265358979D0
      PS=PI/180.D0
      WRITE(7,1)YR,ALAM,BET,ANODE,AI,OMG
    1 FORMAT(/6F10.5)
      IF(YR.LE.1983.D0)GO TO 4
      DT=YR+0.5D0-1950.D0
      GO TO 3
    4 DT=YR-1950.D0
    3 T=DT/100.D0
      A1=1.396319D0
      A2=0.0003083D0
      B1=0.013076D0
      B2=-0.0000097D0
      C1=5.59258D0
      C2=-1.154576D0
      C3=-0.0001542D0
      A=A1*T+A2*T**2
      B=B1*T+B2*T**2
      C=C1+C2*T+C3*T**2
      WRITE(7,2)T,A,B,C
    2 FORMAT(4F10.5)
      A=A*PS
      B=B*PS
      C=C*PS
      ALAM0=ALAM-A+B*DCOS(ALAM+C)*DSIN(BET)/DCOS(BET)
      BET0=BET-B*DSIN(ALAM+C)
      ANODE0=ANODE-A+B*DSIN(ANODE+C)*DCOS(AI)/DSIN(AI)
      AI0=AI-B*DCOS(ANODE+C)
      OMG0=OMG-B*DSIN(ANODE+C)/DSIN(AI)
      CALL KVADR(ALAM0)
      CALL KVADR(ANODE0)
      CALL KVADR(OMG0)
      RETURN
      END
C         FIFIC
      SUBROUTINE FIFIC(FI,FIC,R)
      IMPLICIT REAL*8 (A-H,O-Z)
      FIC=FI-33584339.D-10*DSIN(2.D0*FI)+56395.4D-10*DSIN(4.D0*FI)-
     /126.3D-10*DSIN(6.D0*FI)
      R=DSQRT ((40680669.86D0*(1.D0-0.0133439554D0*(DSIN(FI))**2))/
     /(1.D0-0.006694385096D0*(DSIN(FI))**2))
      RETURN
      END
C         PK2000
C     PROGRAM PRO VYPOCET PRECESNICH KONSTANT ECL,M,N,A,B,C,C',p,m,n
C     PRO STREDNI EKVINOKCIUM ODPOVIDAJICIHO ROKU. VZTAHY URCUJICI
C     TYTO KONSTANTY JSOU VZTAZENY K VYCHOZI EPOSE J2000.0
      SUBROUTINE PK2000(YR,DT,ECL,CM,CN,SM,SN,P,A,B,C,CC)
      IMPLICIT REAL*8(A-H,O-Z)
      IF(YR.LE.0.D0)GO TO 1
      PI=3.14159265358979D0
      IF(YR.LE.1983.D0)GO TO 4
      DT=YR+0.5D0-2000.D0
      GO TO 3
    4 DT=YR-2000.D0
    3 T=DT/100.D0
      AM1=1.2812323D0
      AM2=0.0003879D0
      AM3=0.0000101D0
      AN1=0.5567530D0
      AN2=-0.0001185D0
      AN3=-0.0000116D0
      A1=1.396971D0
      A2=0.0003086D0
      B1=0.013056D0
      B2=-0.0000092D0
      C1=5.12362D0
      C2=0.241614D0
      C3=0.0001122D0
      CC2=-1.155358D0
      CC3=-0.0001964D0
      CM=(AM1*T+AM2*T**2+AM3*T**3)*3600.D0
      CN=(AN1*T+AN2*T**2+AN3*T**3)*3600.D0
      A=A1*T+A2*(T**2)
      B=B1*T+B2*(T**2)
      C=C1+C2*T+C3*T**2
      CC=C1+CC2*T+CC3*T**2
      E0=23.D0+26.D0/60.D0+21.448D0/3600.D0
      E1=-46.815D0/3600.D0
      E2=-0.00059D0/3600.D0
      E3=0.001813D0/3600.D0
      ECL=E0+E1*T+E2*T**2+E3*T**3
      SM0=46.124362D0
      SM1=0.0279312D0
      SM2=-0.00000278D0
      SN0=20.043109D0
      SN1=-0.008533D0
      SN2=-0.00000217D0
      SM=(SM0+SM1*T+SM2*T**2)/3600.D0
      SN=(SN0+SN1*T+SN2*T**2)/3600.D0
      P=DSQRT(SM*SM+SN*SN)
    1 RETURN
      END
C         SLR
      SUBROUTINE SLR(III,IROK,MES,IDEN,PPS,X,SL,DSLDT,R,DRDT)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION SLN(5),RDS(5),DSLC(5),SLD(5),SLM(5),SLS(5)
      PI=3.14159265358979D0
      PV=PI/648000.D0
      PS=PI/180.D0
      DIF=1.D0/365.25D0
      EPSF=0.0000000001D0
      B2=X*(X-1.D0)/4.D0
      B3=X*(X-1.D0)*(X-0.5D0)/6.D0
      IF(PPS.NE.0.D0)GO TO 5
      DTY=DFLOAT(IROK-1992)
      DP=0.00000005D0
      DPY=0.0139692D0
      PPS=DPY+DP*DTY
    5 CALL GRMISE(PPS,PST,PPM,PSC)
      CALL FRY(IROK,MES,IDEN,FR)
      DSLC(1)=PSC*(FR-2.D0*DIF)
      DSLC(2)=PSC*(FR-DIF)
      DSLC(3)=PSC*FR
      DSLC(4)=PSC*(FR+DIF)
      DSLC(5)=PSC*(FR+2.D0*DIF)
      WRITE(7,11)IROK,MES,IDEN,FR,PPS,PSC,DSLC(5)
   11 FORMAT(I6,2I4,F7.4,F11.8,F9.5,F8.3)
      IF(III.EQ.1)GO TO 6
      DO 2 I=1,5
      READ(5,3)SLD1,SLM1,SLS1,DSL,RR
    3 FORMAT(5X,2F5.0,3F10.6)
      IF(SLD1.LT.0.D0)GO TO 6
      IF(DSL.LT.EPSF)DSL=DSLC(I)
      SLN(I)=(SLD1+SLM1/60.D0+SLS1/3600.D0)*PS-DSL*PV
      RDS(I)=RR
    2 CONTINUE
      GO TO 7
    6 CALL SLUNCE(IDEN,MES,IROK,SLD,SLM,SLS,RDS)
      DO 8 I=1,5
    8 SLN(I)=(SLD(I)+SLM(I)/60.D0+SLS(I)/3600.D0)*PS-DSLC(I)*PV
    7 DSL1=SLN(2)-SLN(1)
      DSL2=SLN(3)-SLN(2)
      DSL3=SLN(4)-SLN(3)
      DSL4=SLN(5)-SLN(4)
      D2SL1=DSL2-DSL1
      D2SL2=DSL3-DSL2
      D2SL3=DSL4-DSL3
      D3SL1=D2SL2-D2SL1
      D3SL2=D2SL3-D2SL2
      SL=SLN(3)+X*DSL3+B2*(D2SL2+D2SL3)+B3*D3SL2
      DER3=(DSL2+DSL3)/2.D0
      DER4=(DSL3+DSL4)/2.D0
      DSLDT=DER3+X*(DER4-DER3)-(D3SL1+D3SL2)/12.D0
      DR1=RDS(2)-RDS(1)
      DR2=RDS(3)-RDS(2)
      DR3=RDS(4)-RDS(3)
      DR4=RDS(5)-RDS(4)
      D2R1=DR2-DR1
      D2R2=DR3-DR2
      D2R3=DR4-DR3
      D3R1=D2R2-D2R1
      D3R2=D2R3-D2R2
      R=RDS(3)+X*DR3+B2*(D2R2+D2R3)+B3*D3R2
      DER3=(DR2+DR3)/2.D0
      DER4=(DR3+DR4)/2.D0
      DRDT=DER3+X*(DER4-DER3)-(D3R1+D3R2)/12.D0
      RETURN
      END
C           FRY
      SUBROUTINE FRY(IROK,MES,IDEN,FR)
      IMPLICIT REAL*8(A-H,O-Z)
      PI=3.14159265358979D0
      PS=PI/180.D0
      PH=PI/12.D0
      A1=0.125D0
      A2=0.375D0
      A3=0.625D0
      A4=0.875D0
      EPS=0.000000001D0
      Z=0.D0
      DT=1.D0/365.25D0
      ROK=DBLE(IROK)
      Z=(ROK/4.D0)-(DINT(ROK/4.D0))
      IF(Z.LT.EPS)GO TO 2
      IF((Z-0.25D0).LT.EPS)GO TO 3
      IF((Z-0.50D0).LT.EPS)GO TO 4
      IF((Z-0.75D0).LT.EPS)GO TO 5
      WRITE(6,13)
   13 FORMAT(' POZOR - CHYBA PRI IDENTIFIKACI ROKU')
    2 DIF=DT*A1
      K=1
      GO TO 6
    3 DIF=DT*A2
      K=0
      GO TO 6
    4 DIF=DT*A3
      K=0
      GO TO 6
    5 DIF=DT*A4
      K=0
    6 CALL DEN(MES,IDEN,K,ND)
      FR=DFLOAT(ND)*DT-DIF
      RETURN
      END
C          DEN
      SUBROUTINE DEN(MES,IDEN,K,ND)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION M(12)
      DATA (M(I),I=1,12) /31,28,31,30,31,30,31,31,30,31,30,31/
      ND1=0
      NDM=0
      MR=183+K
      M1=MES-1
      IF(MES.NE.1)GO TO 2
      ND1=IDEN
      GO TO 10
    2 DO 1 I=1,M1
    1 NDM=NDM+M(I)
      ND1=NDM+IDEN
      IF(MES.GT.2)ND1=ND1+K
   10 ND=ND1-MR
      RETURN
      END
C     PROGRAM SLUNCE - VYPOCET DELKY SLUNCE A RADIUS VEKTORU
      SUBROUTINE SLUNCE(IDAY,MONTH,IYEAR,DEST,DEMI,DELSE,RV)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION DEST(5),DEMI(5),DELSE(5),RV(5)
      REAL CRIT
      DATA STRA/0.1745329251994330D-01/,D1,D60,D3600/0.1D+01,0.60D+02,0.
     A3600D+04/,CRIT/0.0/
      OPEN(3,FILE='BAREM.DAT',STATUS='OLD')
      CALL RSNEC(CRIT)
      CLOSE(3,STATUS='KEEP')
      IHOUR=0
      MINUT=0
      SEC=0.D0
      CALL GRMJD(IDAY,MONTH,IYEAR,TTTTT)
      TTTTT=TTTTT-3
      DO 1 I=1,5
      TTTTT=TTTTT+1.D0
      CALL SUN(TTTTT,DELKA,SIRKA,VZDAL)
      HLPDE=DELKA/STRA
      IDEST=IDINT(HLPDE)
      DEST(I)=DBLE(IDEST)
      HLPDE=(HLPDE-DBLE(IDEST))*D60
      IDEMI=IDINT(HLPDE)
      DEMI(I)=DBLE(IDEMI)
      DELSE(I)=(HLPDE-DBLE(IDEMI))*D60
      RV(I)=VZDAL
      SIRSE=SIRKA*D3600/STRA
      DELSE1=DELSE(I)
      WRITE(7,6)TTTTT,IDEST,IDEMI,DELSE1,SIRSE,VZDAL
    6 FORMAT(/,3X,'MOD.JUL.DAT.=',F12.5,/,3X,'EKL. DELKA=',I4,I3,F6.2,
     A3X,'EKL. SIRKA=',F7.3,3X,'VZDALENOST (AU)=',F10.7,/)
    1 CONTINUE
      RETURN
      END
CCC
CCC *** BLOK PROVADEJICI KONVERZI DATA NA MODIFIKOVANE JULIANSKE DATUM ***
CCC
      SUBROUTINE MJDGR(DMJ,DAY,MON,IY)
C CONVERTS MODIFIED JULIAN DATE TO GREGORIAN CALENDAR AND VICE VERSA
      IMPLICIT REAL*8(D)
      N(I,J)=365*I+(I-1)/4-(I-1)/100+(I-1)/400-678971+INT(30.56*J)
     A+((J+9)/12)*(I/4-(I-1)/4-I/100+(I-1)/100+I/400-(I-1)/400-2)
      IY=(DMJ+678957.)/365.2425
      MON=(DMJ+678987.-365.2425*IY)/30.
    1 DAY=DMJ-N(IY,MON)
      IF(DAY.GE.1.) RETURN
      MON=MON-1
      IF(MON.GT.0) GOTO 1
      IY=IY-1
      MON=MON+12
      GO TO 1
      ENTRY GRMJD(IDAY,MON,IY,DMJ)
      DMJ=IDAY+N(IY,MON)
      RETURN
      END
CCC
CCC *** BLOK PRO VYPOCET SLUNECNICH EFEMERID ***
CCC
      SUBROUTINE RSNEC(CRIT)
C CTE KONSTANTY POHYBU BARYCENTRA ZEME-MESIC A UKLADA CLENY VETSI
C NEZ CRIT OBLOUKOVYCH SEKUND.
      DIMENSION II(6)
      COMMON/SNEC/AC(250),AS(250),IA(2,250),NC(6)
      CR=CRIT/206265.
      I=0
    1 READ(3,2)IEL
    2 FORMAT(6I3,6X,2F13.7)
      NC(IEL)=0
    3 READ(3,2)II,SS,CC
      IF(II(1).NE.999) GO TO 4
      IF(IEL.LT.6) GO TO 1
      RETURN
    4 A=SQRT(SS*SS+CC*CC)
      IF(A.LT..5*CR) GO TO 3
      IF(IEL.LE.2.AND.A.LT.CR) GO TO 3
      I=I+1
      NC(IEL)=I
      AC(I)=CC
      AS(I)=SS
      IA(1,I)=1000000*II(1)+10000*II(2)+100*II(3)+II(4)+50505050
      IA(2,I)=1000000*II(5)+10000*II(6)+50505050
      GO TO 3
      END
      SUBROUTINE SUN(DMJ,DL,DB,DR)
C VYPOCET GEOCENTRICKE POLOHY SLUNCE DLE BRETAGNONA  PRO
C EKLIPTIKU A JARNI BOD DATA. PREDEM MUSI BYT DEFINOVAN COMMON
C BLOK /SNEC/.
      IMPLICIT REAL*8(D)
      DIMENSION DEL(6),ARG(6)
      COMMON/SNEC/AC(250),AS(250),IA(2,250),NC(6)
      DATA DPI/6.283185307179586D0/
      DT=(DMJ-51544.5D0)/36525D1
      T=DT
      DEL(1)=1.0000010178D0
      DEL(2)=DMOD(1.753470314D0+(6283.07584918D0-99E-7*T)*DT,DPI)
      DEL(3)=-3740816D-9-(82267E-8-(275E-7+1E-6*T)*T)*T
      DEL(4)=16284477D-9-(62030E-8+(335E-7-1E-6*T)*T)*T
      DEL(5)=(-1134690D-9+(12373E-8+13E-7*T)*T)*T
      DEL(6)=(101804E-9+(4702E-8-5E-7*T)*T)*T
      ARG(1)=DMOD(4.402609D0+26087.903142D0*DT,DPI)
      ARG(2)=DMOD(3.176147D0+10213.285546D0*DT,DPI)
      ARG(3)=DEL(2)
      ARG(4)=DMOD(6.203481D0+3340.612431D0*DT,DPI)
      ARG(5)=DMOD(0.599546D0+529.690965D0*DT,DPI)
      ARG(6)=DMOD(0.874017D0+213.299095D0*DT,DPI)
      J2=0
      DO 3 I=1,6
      J1=J2+1
      J2=NC(I)
      IF(J2.EQ.0) GOTO 3
      DO 2 J=J1,J2
      AR=0.
      DO1 K=1,2
      L1=6-2*K
      DO 1 L=1,L1
      M=10**(8-2*L)
    1 AR=AR+(MOD(IA(K,J)/M,100)-50)*ARG(4*K+L-4)
    2 DEL(I)=DEL(I)+AC(J)*DCOS(AR)+AS(J)*DSIN(AR)
    3 IF(J2.EQ.0) J2=J1-1
      DEL(2)=DEL(2)-4E-6*T*DSIN(4.*ARG(3)-8.*ARG(4)+3.*ARG(5))
      CALL ELIPSA(DEL,DL,DB,DR)
      DB=-DB
      DL=DL+DPI/2.
      CALL PRC(T*10.,DL,DB,DR,DX,DY,DZ)
C VYPOCET POHYBU ZEME KOLEM BARYCENTRA ZEME-MESIC
      AL=DMOD(134.9630+4771988.674D0*DT+.87*T*T,36D1)/57.29578D0
      AF=DMOD(93.2719+4832020.175D0*DT-.37*T*T,36D1)/57.29578D0
      AD=DMOD(297.8504+4452671.115D0*DT-.19*T*T,36D1)/57.29578D0
      AO=DMOD(125.0445-19341.363*DT+.21*T*T,36D1)/57.29578D0
      R=1./(1.+.055*DCOS(AL)+.010*DCOS(AL-2.*AD)+.008*DCOS(2.*AD))
      SB=.090*DSIN(AF)+.005*DSIN(AL+AF)+.005*DSIN(AL-AF)
      CB=SQRT(1.-SB*SB)
      ALM=AF+AO+.110*DSIN(AL)-.022*DSIN(AL-2.*AD)+.011*DSIN(2.*AD)
      SL=DSIN(ALM)
      CL=DCOS(ALM)
      DX=DX+312E-7*R*CB*CL
      DY=DY+312E-7*R*CB*SL
      DZ=DZ+312E-7*R*SB
      CALL RECPOL(DX,DY,DZ,DL,DB,DR)
      RETURN
      END
CCC
CCC *** BLOK PRO VYPOCET MESICNICH EFEMERID ***
CCC
CCC
CCC *** BLOK PROVADEJICI VYPOCET ELIPTICKEHO POHYBU, RESICI KEPLEROVU ***
CCC ***                             ROVNICI                           ***
      SUBROUTINE ELIPSA(DEL,DL,DB,DR)
C RESI ELIPTICKY POHYB POSTUPNYMI APROXIMACEMI Z KEPLEROVY ROVNICE
      IMPLICIT REAL*8(D)
      DIMENSION DEL(6)
      DX=DSQRT(DEL(3)*DEL(3)+DEL(4)*DEL(4))
      DPH=DATAN2(DEL(4),DEL(3))
      DI=2.D0*DASIN(DSQRT(DEL(5)*DEL(5)+DEL(6)*DEL(6)))
      DND=DATAN2(DEL(6),DEL(5))
      DMAN=DEL(2)-DPH
      DEXO=DMAN
    1 DEX=DMAN+DX*DSIN(DEXO)
      IF(DABS(DEX-DEXO).LE.5E-6) GOTO 2
      DEXO=DEX
      GOTO 1
    2 DV=2.*DATAN2(DSQRT((1D0+DX)/(1D0-DX))*DSIN(DEX/2.),DCOS(DEX/2.))
      DU=DV+DPH-DND
      DB=DASIN(DSIN(DI)*DSIN(DU))
      DL=DATAN2(DCOS(DI)*DSIN(DU),DCOS(DU))+DND
      DR=DEL(1)*(1D0-DX*DCOS(DEX))
      RETURN
      END
CCC
CCC *** BLOK PROVADEJICI KONVERZI SFERICKYCH SOURADNIC NA PRAVOUHLE ***
CCC
      SUBROUTINE POLREC(DRA,DEC,DRV,DX,DY,DZ)
C TRANSFORMS POLAR TO RECTANGULAR COORDINATES AND VICE VERSA.
      IMPLICIT REAL*8(D)
      DX=DRV*DCOS(DRA)*DCOS(DEC)
      DY=DRV*DSIN(DRA)*DCOS(DEC)
      DZ=DRV*DSIN(DEC)
      RETURN
      ENTRY RECPOL(DX,DY,DZ,DRA,DEC,DRV)
      DRV=DSQRT(DX*DX+DY*DY+DZ*DZ)
      DRA=0D0
      DEC=DATAN2(DZ,DSQRT(DX*DX+DY*DY))
      IF(DX*DX+DY*DY.GT.0D0) DRA=DATAN2(DY,DX)
      IF(DRA.LT.0D0) DRA=DRA+6.283185307179586D0
      RETURN
      END
CCC
CCC *** BLOK PROVADEJICI OPRAVY O PRECESI ***
CCC
      SUBROUTINE PRC(T,DL,DB,DR,DX,DY,DZ)
C OPRAVI EKLIPT. SOURAD. O PRECESI OD J2000 A PREVEDE NA PRAVOUHLE.
C T JE VE STOLETICH OD J2000.
      IMPLICIT REAL*8(D)
      P=(2438175E-8+ 39E-8*T)*T
      PI=(22788E-8-16E-8*T)*T
      A=.089424+.004218*T
      DSL=DSIN(DL+A)
      DCL=DCOS(DL+A)
      SP=DSIN(PI)
      CP=DCOS(PI)
      DSB=DSIN(DB)
      DCB=DCOS(DB)
      DX=DCB*DCL
      DY=-SP*DSB+CP*DCB*DSL
      DZ= CP*DSB+SP*DCB*DSL
      DB=DATAN2(DZ,DSQRT(DX*DX+DY*DY))
      DL=DATAN2(DY,DX)+P-A
      CALL POLREC(DL,DB,DR,DX,DY,DZ)
      RETURN
      END
C          GAST
C     SUBROUTINE FOR COMPUTATION OF GREENWICH APPARENT SIDERAL TIME
      SUBROUTINE GAST(IY,MON,IDAY,STH,STM,STS)
      IMPLICIT REAL*8(A-H,O-Z)
      PI=3.14159265358979D0
      CALL GRMJD(IDAY,MON,IY,DMJ)
      CALL NUTA1(DMJ)
      CALL DGSTA(DMJ,ST)
      STA=ST*12.D0/PI
      CALL GRMISE(STA,STH,STM,STS)
      WRITE(7,1)STH,STM,STS
    1 FORMAT(2F5.0,F9.4)
      RETURN
      END
C          NUTA1
      SUBROUTINE NUTA1(DMJ)
C  CALCULATES NUTATION AFTER WAHR (IAU 1980 SERIES), AND DEFINES THE
C  COMMON BLOCK NU, NEEDED BY THE SUBROUTINE NUTA2 AND THE FUNCTION DGST.
C  DOBLQ IS THE OBLIQUITY OF THE ECLIPTIC,
C  DEPS IS NUTATION IN OBLIQUITY,
C  DPSI IS NUTATION IN LONGITUDE.
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION DAO(5),DA1(5),A2(5),A3(5),IARG(106),PSO(106),PST(39),
     1EPO(106),EPT(39),DARG(5)
      COMMON/NU/DOBLQ,DEPS,DPSI
      DATA DROS/206264.8062471D0/,
     1DAO/485866.733D0,1287099.804D0,335778.877D0,1072261.307D0,
     2450160.280D0/,DA1/1717915922.633D0,129596581.224D0,
     31739527263.137D0,1602961601.328D0,-6962890.539D0/,A2/31.310,
     4-0.577,-13.257,-6.891,7.455/,A3/0.064,-0.012,0.011,0.019,0.008/
      DATA IARG/55556,55557,35756,75355,35757,64545,53736,75356,55737,
     156555,56737,54737,55736,75535,55735,57555,56556,57737,54556,
     235576,54736,75536,56736,65545,76535,55376,56375,56557,45566,
     356735,55757,65555,55756,65757,65535,45757,55575,65556,45556,
     445777,65756,55777,75555,65737,75757,55755,45756,45576,65536,
     545776,66535,56757,54757,65777,65575,75737,55576,55776,65736,
     655536,64555,75756,56535,65355,55565,66555,65755,64757,44777,
     735556,85757,54777,66757,45736,75556,65557,85555,55767,45557,65515,
     835777,45797,75515,66737,65776,35797,45957,64535,75736,75777,
     965576,55937,85737,65735,56756,44576,55356,55747,56575,65335,
     A54756,66536,65375,75575,55797,56565/
      DATA PSO/-171996.,2062.,46.,11.,-3.,-3.,-2.,1.,-13187.,1426.,
     A-517.,
     1217.,129.,48.,-22.,17.,-15.,-16.,-12.,-6.,-5.,4.,4.,-4.,1.,1.,-1.,
     22*1.,-1.,-2274.,712.,-386.,-301.,-158.,123.,63.,63.,-58.,-59.,
     3-51.,-38.,2*29.,-31.,26.,21.,16.,-13.,-10.,-7.,7.,-7.,-8.,2*6.,
     4-6.,-7.,6.,-5.,5.,-5.,-4.,4.,-4.,-3.,3.,-3.,-3.,-2.,-3.,-3.,2.,
     5-2.,2.,-2.,2.,2.,1.,-1.,1.,-2.,-1.,1.,-1.,-1.,3*1.,-1.,-1.,1.,1.,
     6-1.,1.,1.,7*-1.,1.,-1.,1./
      DATA PST/-174.2,0.2,6*0.,-1.6,-3.4,1.2,-0.5,0.1,0.,0.,-0.1,0.,
     10.1,12*0.,-0.2,0.1,-0.4,4*0.,0.1,-0.1/
      DATA EPO/92025.,-895.,-24.,0.,1.,0.,1.,0.,5736.,54.,224.,-95.,
     1-70.,1.,0.,0.,9.,7.,6.,3.,3.,-2.,-2.,7*0.,977.,-7.,200.,129.,-1.,
     2-53.,-2.,-33.,32.,26.,27.,16.,-1.,-12.,13.,-1.,-10.,-8.,7.,5.,
     30.,-3.,3.,3.,0.,-3.,3.,3.,-3.,3.,0.,3.,5*0.,5*1.,-1.,1.,-1.,1.,
     40.,-1.,-1.,0.,-1.,1.,0.,-1.,1.,1.,0.,0.,-1.,17*0./
      DATA EPT/8.9,0.5,6*0.,-3.1,-0.1,-0.6,0.3,18*0.,-0.5,0.,0.,-0.1,
     15*0./
      DT=(DMJ-51544.5)/36525.
      DO 1 I=1,5
   1  DARG(I)=DMOD(DAO(I)+DT*(DA1(I)+DT*(A2(I)+DT*A3(I))),1296D3)/DROS
      DPSI=0D0
      DEPS=0D0
      DO 4 I=1,106
      CPS=PSO(I)
      CEP=EPO(I)
      IF(I.GT.39)GO TO 2
      CPS=CPS+DT*PST(I)
      CEP=CEP+DT*EPT(I)
   2  DAR=0D0
      DO 3 J=1,5
   3  DAR=DAR+(MOD(IARG(I)/10**(5-J),10)-5)*DARG(J)
      DPSI=DPSI+CPS*DSIN(DAR)
   4  DEPS=DEPS+CEP*DCOS(DAR)
      DPSI=1E-4*DPSI/DROS
      DEPS=1E-4*DEPS/DROS
      DOBLQ=(84381.448D0+DT*(-46.8150+DT*(-59E-5+DT*1813E-6)))/DROS+DEPS
      RETURN
      END
C          DGSTA
      SUBROUTINE DGSTA(DMJ,DGST)
C  CALCULATES GREENWICH SIDEREAL TIME FOR A GIVEN MOD.JUL.DATE.
C  BEFORE ITS USING COMMON BLOCK NU SHOULD BE DEFINED. RESULT IS EX-
C  PRESSED IN R A D I A N S !!!
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/NU/DOBLQ,DEPS,DPSI
      DATA DROS/13750.98708313976D0/,DS/8640184.812866D0/,D0/0.0D0/
      D=IDINT(DMJ)-51544.5D0
      DT=D/36525.
      DFR=DMJ-D-51544.5D0
      DGST=DMOD(24110.54841D0+(DS+(0.093104-62E-7*DT)*DT)*DT+(864D2+DS/
     A     36525.+(5098E-9-51E-11*DT)*DT)*DFR+DPSI*DCOS(DOBLQ)*DROS,
     B     864D2)
      IF(DGST.LT.D0)DGST=DGST+864D2
      DGST=DGST/DROS
      RETURN
      END
   
